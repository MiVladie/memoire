name: Deploy MÃ©moire [Utopie] Server

on:
    push:
        branches:
            - master
        paths:
            - 'utopie/**'

    workflow_dispatch:

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            # Step 1: Checkout the repository
            - name: Checkout Code
              uses: actions/checkout@v4

            # Step 2: Stop the PM2 process on the server
            - name: Stop PM2 Process
              run: |
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
                  chmod 600 id_rsa

                  ssh -o StrictHostKeyChecking=no -i id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
                    pm2 stop memoire || echo "PM2 process not running, skipping stop"
                    
                  EOF

            # Step 3: Copy backend files to the server
            - name: Copy Backend Files to Server
              uses: appleboy/scp-action@v0.1.3
              with:
                  host: ${{ secrets.SERVER_IP }}
                  username: ${{ secrets.SERVER_USER }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  source: 'utopie/*'
                  target: '~/memoire'
                  strip_components: 1

            # Step 4: Set environment variables on the server
            - name: Set up environment variables
              run: |
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
                  chmod 600 id_rsa

                  ssh -o StrictHostKeyChecking=no -i id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
                    cd ~/memoire
                    
                    echo "NODE_ENV=${{ secrets.NODE_ENV }}" > .env
                    echo "SERVER_PATH=${{ secrets.SERVER_PATH }}" >> .env
                    echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
                    echo "SOUNDCLOUD_CLIENT_ID=${{ secrets.SOUNDCLOUD_CLIENT_ID }}" >> .env
                    echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
                    echo "SALT_ROUNDS=${{ secrets.SALT_ROUNDS }}" >> .env
                    echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> .env
                    echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
                    echo "SMTP_FROM=${{ secrets.SMTP_FROM }}" >> .env
                    echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> .env
                    echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env
                    echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
                    echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env

                  EOF

            # Step 5: Install dependencies on the server
            - name: Install Dependencies on the Server
              run: |
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
                  chmod 600 id_rsa

                  ssh -o StrictHostKeyChecking=no -i id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
                    cd ~/memoire
                    npm ci

                  EOF

            # Step 6: Run Prisma migrations on the server
            - name: Run Prisma Migrations
              run: |
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
                  chmod 600 id_rsa

                  ssh -o StrictHostKeyChecking=no -i id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
                    cd ~/memoire
                    npx prisma migrate deploy

                  EOF

            # Step 7: Restart the app with PM2
            - name: Restart Application with PM2
              run: |
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
                  chmod 600 id_rsa

                  ssh -o StrictHostKeyChecking=no -i id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << EOF
                    cd ~/memoire
                    pm2 restart memoire || pm2 start npm --name "memoire" -- run start
                    
                  EOF
